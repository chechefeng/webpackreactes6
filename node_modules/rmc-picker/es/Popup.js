import React from 'react';
import Modal from 'rc-dialog';
import createClass from 'create-react-class';
import PopupMixin from './PopupMixin';
import Touchable from 'rc-touchable';
var PopupPicker = createClass({
  mixins: [PopupMixin],
  getDefaultProps: function getDefaultProps() {
    return {
      prefixCls: 'rmc-picker-popup',
      triggerType: 'onClick',
      WrapComponent: 'span'
    };
  },
  getModal: function getModal() {
    var props = this.props;
    if (!this.state.visible) {
      return null;
    }
    var prefixCls = props.prefixCls;

    return React.createElement(
      Modal,
      { prefixCls: '' + prefixCls, className: props.className || '', visible: true, closable: false, transitionName: props.transitionName || props.popupTransitionName, maskTransitionName: props.maskTransitionName, onClose: this.hide, style: props.style },
      React.createElement(
        'div',
        null,
        React.createElement(
          'div',
          { className: prefixCls + '-header' },
          React.createElement(
            Touchable,
            { activeClassName: prefixCls + '-item-active' },
            React.createElement(
              'div',
              { className: prefixCls + '-item ' + prefixCls + '-header-left', onClick: this.onDismiss },
              props.dismissText
            )
          ),
          React.createElement(
            'div',
            { className: prefixCls + '-item ' + prefixCls + '-title' },
            props.title
          ),
          React.createElement(
            Touchable,
            { activeClassName: prefixCls + '-item-active' },
            React.createElement(
              'div',
              { className: prefixCls + '-item ' + prefixCls + '-header-right', onClick: this.onOk },
              props.okText
            )
          )
        ),
        this.getContent()
      )
    );
  },
  render: function render() {
    return this.getRender();
  }
});
export default PopupPicker;