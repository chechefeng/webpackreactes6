import React from 'react';
import { View, TouchableHighlight, Text } from 'react-native';
import createClass from 'create-react-class';
import PopupMixin from './PopupMixin';
import Modal from 'rc-dialog/es/Modal';
var PopupPicker = createClass({
    mixins: [PopupMixin],
    getDefaultProps: function getDefaultProps() {
        return {
            actionTextUnderlayColor: '#ddd',
            actionTextActiveOpacity: 1,
            triggerType: 'onPress',
            styles: {},
            WrapComponent: View
        };
    },
    getModal: function getModal() {
        var props = this.props;
        var styles = props.styles,
            title = props.title,
            okText = props.okText,
            dismissText = props.dismissText;

        var titleEl = typeof title === 'string' ? React.createElement(
            Text,
            { style: [styles.title] },
            title
        ) : title;
        var okEl = typeof okText === 'string' ? React.createElement(
            Text,
            { style: [styles.actionText] },
            okText
        ) : okText;
        var dismissEl = typeof dismissText === 'string' ? React.createElement(
            Text,
            { style: [styles.actionText] },
            dismissText
        ) : dismissText;
        return React.createElement(
            Modal,
            { animationType: 'slide-up', wrapStyle: styles.modal, visible: this.state.visible, onClose: this.onDismiss },
            React.createElement(
                View,
                { style: [styles.header] },
                React.createElement(
                    TouchableHighlight,
                    { onPress: this.onDismiss, style: [styles.headerItem], activeOpacity: props.actionTextActiveOpacity, underlayColor: props.actionTextUnderlayColor },
                    dismissEl
                ),
                React.createElement(
                    View,
                    { style: [styles.headerItem] },
                    titleEl
                ),
                React.createElement(
                    TouchableHighlight,
                    { onPress: this.onOk, style: [styles.headerItem], activeOpacity: props.actionTextActiveOpacity, underlayColor: props.actionTextUnderlayColor },
                    okEl
                )
            ),
            this.getContent()
        );
    },
    render: function render() {
        return this.getRender();
    }
});
export default PopupPicker;